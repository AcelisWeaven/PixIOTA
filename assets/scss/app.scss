@import "variables";

html {
  width: 100%;
  height: 100%;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI",
  "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans",
  "Droid Sans", "Helvetica Neue", sans-serif;
}

html, body {
  margin: 0;
  padding: 0;
  color: white;
  overscroll-behavior: contain;
}

.header {
  grid-area: header;
  display: flex;
}

#logo {
  height: 18px;
  fill: white;
  margin: 5px;
}

.picker {
  grid-area: picker;
  background: linear-gradient(to right, #399b4e, #869c99);
  display: flex;
  flex-wrap: wrap;
  align-items: center;

  $label-width: 200px;

  .label {
    $padding: 20px;
    flex: 1 0 calc(#{$label-width} - #{$padding * 2});
    padding: $padding;

    @media only screen and (max-width: $breakpoint) {
      flex: 1 0 100%;
    }

    span {
      display: inline-block;
      width: 20px;
      line-height: 20px;
      height: 20px;
      text-align: center;
      font-weight: bold;
      border: 1px solid white;
      border-radius: 100%;
    }
  }

  .row-content {
    flex: 1 0 calc(100% - #{$label-width});

    @media only screen and (max-width: $breakpoint) {
      flex: 1 0 100%;
    }
  }

  .color-picker-container {
    display: flex;
    flex-wrap: wrap;
  }
}

.color-picker {
  position: relative;
  height: 30px;
  width: 30px;
  margin: 10px 5px;
  border: 2px solid rgb(255, 255, 255);
  border-radius: 100%;
  box-shadow: 0 5px 5px rgba(0, 0, 0, 0.1), 0 10px rgba(114, 114, 114, 0.3) inset;
  transform: scale(1);
  transition: transform 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);

  &:hover {
    cursor: pointer;
    transform: scale(1.2);
  }

  &:after {
    content: 'âœ”';
    display: block;
    position: absolute;
    font-family: "Segoe UI Symbol", "Comic Sans MS", cursive, sans-serif;
    line-height: 30px;
    text-align: center;
    left: 0;
    right: 0;
    transform: rotate(-20deg);
    transition: transform 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275),
    opacity 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
    pointer-events: none;
    opacity: 0;
    font-size: 32px;
    background-color: rgba(black, .3);
    border-radius: 100%;
  }

  &.active {
    transform: scale(1.4);

    &:after {
      transform: rotate(0deg);
      opacity: 1;
    }
  }
}

@for $i from 1 through length($colors) {
  $color: nth($colors, $i);
  [data-color-index="#{$i - 1}"] {
    background-color: $color;

    &:after {
      @if ($i == 2) {
        color: lighten($color, 40%);
      } @else {
        color: lighten($color, 20%);
      }
    }
  }
}

.content {
  position: relative;
  grid-area: content;
  overflow: hidden;
  background: linear-gradient(127deg, rgba(0, 255, 90, 0.8), rgba(0, 255, 0, 0) 70.71%),
  linear-gradient(336deg, rgba(0, 208, 255, 0.8), white 70.71%);

  &.dragged {
    .preview-pixel.locked {
      transition-duration: 0s;
    }
  }
}

.canvas-wrapper {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

#canvas {
  image-rendering: pixelated;
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.preview-pixel {
  display: none;
  position: absolute;
  transition: top 50ms linear, left 50ms linear, background-color 150ms linear;
  box-shadow: 0 4px 9px 0 rgba(black, 0.13), 0 0 30px rgba(white, 0.18) inset;
  pointer-events: none;

  &:after {
    content: '';
    display: block;
    position: relative;
    top: -22px;
    left: -22px;
    width: calc(100% + 40px);
    height: calc(100% + 40px);
    border: 2px solid transparent;
    border-radius: 100%;
    border-left-color: rgba(114, 134, 122, 0.83);
    border-right-color: rgba(114, 134, 122, 0.83);
    animation: spin 4s infinite;
  }

  &.no-transition {
    transition-duration: 0s;
  }
}

@keyframes spin {
  0%, 100% {
    border-left-color: #34ff7c;
    border-right-color: #34ff7c;
  }
  50% {
    border-left-color: #0ab3d9;
    border-right-color: #0ab3d9;
  }
  50%, 100% {
    transform: rotate(360deg);
  }
}

.footer {
  grid-area: footer;
}

.grid-container {
  display: grid;
  grid-template-areas: "header" "picker" "content" "footer";
  grid-template-rows: max-content max-content auto max-content;
  background-color: #2f3a43;
  height: 100vh;
  width: 100vw;
}

.grid-container > div {
  padding: 0;
}
